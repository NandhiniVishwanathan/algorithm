import time
import random
import matplotlib.pyplot as plt


def binary_search(arr, low, high, x):
    if high >= low:
        mid = (high + low) // 2
        
        
        if arr[mid] == x:
            return mid
        
        
        elif arr[mid] > x:
            return binary_search(arr, low, mid - 1, x)
        
        
        else:
            return binary_search(arr, mid + 1, high, x)
    else:
        
        return -1


def time_binary_search(n, x):
    
    arr = sorted(random.sample(range(1, 1000000), n))
    
   
    start_time = time.time()
  
    result = binary_search(arr, 0, len(arr) - 1, x)
    
    
    end_time = time.time()
    
   
    return end_time - start_time


n_values = [100, 1000, 5000, 10000, 20000, 50000, 100000]


times = []


for n in n_values:
    x = random.randint(1, 1000000)  # Random number to search
    search_time = time_binary_search(n, x)
    times.append(search_time)
    print(f"n = {n}, Time taken = {search_time:.6f} seconds")


plt.plot(n_values, times, marker='o', color='b', label="Time taken for binary search")
plt.xlabel("Number of elements (n)")
plt.ylabel("Time (seconds)")
plt.title("Time Complexity of Recursive Binary Search")
plt.legend()
plt.grid(True)
plt.show()
